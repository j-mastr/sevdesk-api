name: Check for updated OpenAPI specs
on:
  #schedule:
  #- cron: "27 3 * * 1-5"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        #with:
        #  ref: main
      - name: Prepare git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - name: Checkout update branch
        run: |
          git fetch
          git switch update-openapi 2>/dev/null || git switch -c update-openapi
        #  git rebase main
      - name: Update OpenAPI
        id: update_openapi
        run: ./scripts/update.sh
        continue-on-error: true
      - name: create pull request
        if: steps.update_openapi.outcome == 'success' || steps.update_openapi.outcome == 'failure'
        id: create_pr
        run: |
          git push --set-upstream origin update-openapi
          gh pr create --base ${{ github.event.repository.default_branch }} --head update-openapi --label "update:openapi" --title "[Automated] Merge update-openapi into ${{ github.event.repository.default_branch }}" --body 'Created by GitHub action to update most recent OpenAPI specs.'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Auto-merge update
        if: steps.update_openapi.outcome == 'success' && steps.create_pr.outcome == 'success'
        run: gh pr merge --auto --squash "${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Comment on failed update
        if: steps.update_openapi.outcome == 'failure' && steps.create_pr.outcome == 'success'
        run: gh pr comment "update-openapi" --body "Failed to merge updated OpenAPI automatically. Please `git checkout update-openapi` and `./scripts/update.sh` manually."
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
